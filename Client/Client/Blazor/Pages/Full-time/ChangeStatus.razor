@using Blazor.Data
@using Model

@inject ITaskServices taskServices;

<div class="container">
    <div class="result">
        <body>
        <select name="status" class="form__input_select" @bind="NewStatus">
            @foreach (Status status in Enum.GetValues(typeof(Status)))
            {
                if (status != Status.Rejected && status!= Status.Approved)
                {
                    <option value="@status">@status</option>
                }
            }
        </select>
        </body>

    </div>

  
</div>
<div class="modal_foter">
    <button @onclick="Save" class="btn btn-success">Save</button>
    <button @onclick="ModalInstance.CancelAsync" class="btn btn-secondary">Close</button>
</div>

@code {

    [CascadingParameter]
    BlazoredModalInstance ModalInstance { get; set; }

    [Parameter]
    public Taskk Task { get; set; }

    private Status NewStatus { get; set; }

    private async Task Save()
    {
        Task.Status = NewStatus;
        await taskServices.ChangeStatus(Task.id,NewStatus);
        
        await ModalInstance.CloseAsync(ModalResult.Ok<Taskk>(Task));
    }




}